#!/usr/bin/env bash

SCRIPT=`basename "$0"`
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 6)
RED=$(tput setaf 1)
NC=$(tput sgr 0)
WIDTH=$(tput cols)



function usage()
{
  #Prints out help menu
line_fill;
cat <<EOF
Usage: ${YELLOW}${SCRIPT}${NC} [options]
[-s --stow ]           [Stows all the files in directory]
[-v --version]         [Display version info]
[-h --help]            [Display this help message]
This script's metadata Generated by ${gen_source} on ${gen_date}.

Notice any bugs? Please report it.
You are welcome to create a pull request on Github, if you can make it better in any way!
${BLUE}https://github.com/tprasadtp/minchu${NC}
EOF
line_fill;
}


function line_fill()
{
  # Function simply draws a line accross width of the terminal for a given color
  # Input: Variable defining color in format $(tput setaf <number)
  # If input argument is empty it reverts to a default color of Yellow.
  if [ $# -eq 0 ]; then
    local fill_color=${YELLOW}
  else
    local fill_color=${1}
  fi
  printf "${fill_color}%-${WIDTH}s@%s${NC}\n" | sed -e "s/ /-/g" -e "s/-@/ /" -e "s/@-/ /"
}

function display_version()
{
  line_fill "${BLUE}";
  printf "${spacing_string} ${YELLOW} ${SCRIPT} ${NC}\n${spacing_string} ${YELLOW} ${gen_date} ${NC}\n" "Executable:" "Generated on:";
  line_fill "${BLUE}";
}

function stow_files()
{
  # Function to stow all valid files in directory
  # Expects: Git repo to be copied and to be run from its current directory.
  # Expects: GNU stow installed.
  # Output: Stows the files in directory mentioned or default (Dotfiles)
  line_fill;
  if command -v stow >&/dev/null; then
     if [ -d ${DOTFILE_DIR} ]; then
      printf "Stowing files. By default .bashrc file stowed is in ${bashrc_dir}.\n"
      stow android-tools \
      neofetch \
      bash-${bashrc_dir}\
      image-processing \
      startup-items \
      dockerfiles\
      git
      line_fill;
      return 0
    else
      printf "\n${DOTFILE_DIR} is not present under ${HOME}\n"
      line_fill
      return 1;
    fi
  else
    printf "\nProgram stow is not installed. Please install stow.\n";
    line_fill;
    return 1;
  fi
}

function main()
{
      #check if no args
      if [ $# -eq 0 ]; then
              printf "\n${BLUE}No arguments found. See usage below.${NC}\n"
              usage;
      		    exit 1;
      fi;

      # Process command line arguments.
      while [ "$1" != "" ]; do
          case ${1} in
              -s | --stow )           stow_files;
                                      exit $?;
                                      ;;
              -v | --version)         display_version;
                                      exit 0
                                      ;;
              -h | --help)            usage;
                                      ;;
              * )                     printf "\n${BLUE}Invalid argument(s). See usage below.${NC}\n"
                                      usage;
                                      exit 1
                                      ;;
          esac
      	shift
      done
  }
#
