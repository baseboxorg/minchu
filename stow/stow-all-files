#!/usr/bin/env bash

# This is a bash utility to help stow all th config files on your laptop neatly
# Version:2.1
# Author: Prasad Tengse
# Licence: MIT
# Github Repository: https://github.com/tprasadtp/minchu
# Requirements - Bash v4.4 and above
#              - GNU stow to be installed.

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~Changelogs~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# v0.0      - Initial placeholder script
# v1.0      - Stowing files to directory
# v1.1      - Seperate copy and stow operations (cant use cd in script)
# v1.2      - Added ability to rename the old dotfiles directory.
# v2.0      - Populate list to be stowed from a config file and then stow it.
# v2.1      - Added a fallback mode where config_file is missing/not available.




SCRIPT=$(basename "$0")
YELLOW=$(tput setaf 3)
BLUE=$(tput setaf 6)
NC=$(tput sgr 0)
WIDTH=$(tput cols)
readonly config_file=stow.list


function usage()
{
  #Prints out help menu
line_fill;
cat <<EOF
Usage: ${YELLOW}${SCRIPT}${NC} [options]
[-s --stow ]       [Stows all the files in directory]
[-v --version]     [Display version info]
[-g]               [Try stowing files without config (NOT RECOMMENDED) ]
[-h --help]        [Display this help message]

* Metadata Generated by ${gen_source} on ${gen_date}.

* This script uses a config file ${YELLOW} "${config_file}"${NC} containing \
list of directories to be stowed. If the Dotfiles directory has been changed \
then you have to delete symlinks manually.

Notice any bugs? Please report it.
You are welcome to create a pull request on Github, if you can make it better in any way!
${BLUE}https://github.com/tprasadtp/minchu${NC}
EOF
line_fill;
}


function line_fill()
{
  # Function simply draws a line accross width of the terminal for a given color
  # Input: Variable defining color in format $(tput setaf <number)
  # If input argument is empty it reverts to a default color of Yellow.
  if [ $# -eq 0 ]; then
    local fill_color="${YELLOW}"
  else
    local fill_color="${1}"
  fi
  printf "${fill_color}%-${WIDTH}s@%s${NC}\n" | sed -e "s/ /-/g" -e "s/-@/ /" -e "s/@-/ /"
}

function display_version()
{
  line_fill "${BLUE}";
  # shellcheck disable=SC2154
  printf "${spacing_string} ${YELLOW} ${SCRIPT} ${NC}\n${spacing_string} ${YELLOW} ${gen_date} ${NC}\n" "Executable:" "Generated on:";
  printf "Following directories are listed in config file.\n"
  line_fill "${BLUE}";
  if [ -f ~/.bash_aliases ]; then
      cat stow.list
    else
      printf "Config file:${config_file} not found!"
  fi
  line_fill;
}

function stow_files()
{
  # Function to stow all valid files in directory
  # Expects: Git repo to be copied and to be run from its current directory.
  # Expects: GNU stow installed.
  # Output: Stows the files in directory mentioned or default (Dotfiles)
  line_fill;
  if command -v stow >&/dev/null; then
    # shellcheck disable=SC2086
     if [ -d ${DOTFILE_DIR} ]; then
      printf "${BLUE}Stowing files.....\n"
      stow android-tools \
      neofetch \
      bash-${bashrc_dir}\
      image-processing \
      startup-items \
      dockerfiles\
      git\
      imwheel\
      office-tools
      line_fill;
      return 0
    else
      printf "\n${DOTFILE_DIR} is not present under ${HOME}\n"
      line_fill
      return 1;
    fi
  else
    printf "\nProgram stow is not installed. Please install stow.\n";
    line_fill;
    return 1;
  fi
}


function stow_files_withconfig()
{
  # Function to stow all valid files in directory
  # Expects: Git repo to be copied and to be run from its current directory.
  # Expects: GNU stow installed.
  # Expects: afile named stow list containing all the directories to be stowed.
  # Output: Stows the files in directory mentioned or default (Dotfiles)
  if command -v stow >&/dev/null; then
    #check if DOTFILE_DIR exists
      # shellcheck disable=SC2086
     if [ -d ${DOTFILE_DIR} ]; then
      #check if config file with list of dir exists
        if [ -e stow.list ]; then
          printf "${BLUE}Stowing files.....${NC}\n"
          line_fill;
          while IFS= read -r line
            do
                 #read every line from file and stow it
                 if  stow "$line" ; then
                     printf "Stowed:${line}\n"
                  else
                      printf "Some error occured during adding  ${line}, Ignoring and moving on!\n"
                  fi
            done < stow.list
            line_fill;
          return 0;
        else
          printf "Config file stow.list is missing\n"
          line_fill;
          exit 1;
        fi
    else
      printf "\n${DOTFILE_DIR} is not present under ${HOME}\n"
      line_fill;
      return 1;
    fi
  else
    printf "\nProgram stow is not installed. Please install stow.\n";
    line_fill;
    return 1;
  fi
}



function main()
{
      #check if no args
      if [ $# -eq 0 ]; then
              printf "\n${BLUE}No arguments found. See usage below.${NC}\n"
              usage;
      		    exit 1;
      fi;

      # Process command line arguments.
      while [ "$1" != "" ]; do
          case ${1} in
              -g)                     stow_files;
                                      exit $?;
                                      ;;
              -s | --stow )           stow_files_withconfig;
                                      exit $?;
                                      ;;
              -v | --version)         display_version;
                                      exit 0
                                      ;;
              -h | --help)            usage;
                                      ;;
              * )                     printf "\n${BLUE}Invalid argument(s). See usage below.${NC}\n"
                                      usage;
                                      exit 1
                                      ;;
          esac
      	shift
      done
  }
#
